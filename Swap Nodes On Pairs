# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def swapPairs(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        l=[]
        temp=head
        while(temp):
            l.append(temp.val)
            temp=temp.next
        if(len(l)%2==0):
            ll=[]
            for i in range(0,len(l),2):
                a=l[i:i+2]
                for j in range(len(a)-1,-1,-1):
                    ll.append(a[j])
            res=ListNode()
            ans=res
            for i in ll:
                ans.next=ListNode(i)
                ans=ans.next
            return res.next
        else:
            ll=[]
            for i in range(0,len(l)-1,2):
                a=l[i:i+2]
                for j in range(len(a)-1,-1,-1):
                    ll.append(a[j])
            ll.append(l[-1])
            res=ListNode()
            ans=res
            for i in ll:
                ans.next=ListNode(i)
                ans=ans.next
            return res.next
